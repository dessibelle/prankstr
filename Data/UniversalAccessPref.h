//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AEDesc {
    unsigned int _field1;
    struct OpaqueAEDataStorageType **_field2;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct OpaqueAEDataStorageType;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: MacOS/UniversalAccessPref
// UUID: 7F53B5AC-40BF-37A0-9DAD-8A25D42DCC2E
//
//                           Arch: x86_64
//                 Source version: 236.61.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Supported
//

@protocol ACSHEventTapEventHandler <NSObject>
- (struct __CGEvent *)handleEvent:(struct __CGEvent *)arg1;
@end

@protocol ACSHHIDDeviceManagerDelegate <NSObject>
- (void)device:(ACSHHIDDevice *)arg1 didPostEvent:(ACSHHIDEvent *)arg2;
- (BOOL)shouldSeizeMonitoredDevice:(ACSHHIDDevice *)arg1;
- (BOOL)shouldMonitorDevice:(ACSHHIDDevice *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (NSString *)panel:(id)arg1 userEnteredFilename:(NSString *)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(NSURL *)arg2;
- (BOOL)panel:(id)arg1 validateURL:(NSURL *)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(NSURL *)arg2;
@end

@protocol NSTabViewDelegate <NSObject>

@optional
- (void)tabViewDidChangeNumberOfTabViewItems:(NSTabView *)arg1;
- (void)tabView:(NSTabView *)arg1 didSelectTabViewItem:(NSTabViewItem *)arg2;
- (void)tabView:(NSTabView *)arg1 willSelectTabViewItem:(NSTabViewItem *)arg2;
- (BOOL)tabView:(NSTabView *)arg1 shouldSelectTabViewItem:(NSTabViewItem *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol UADeviceAssignmentWindowDelegate <NSObject>
- (void)updateDeviceAssignment:(NSDictionary *)arg1 forWindow:(NSWindow *)arg2;
@end

@interface AddRemoveBar : NSSegmentedControl
{
}

+ (Class)cellClass;
- (BOOL)isConfigSelected;
- (BOOL)isRemoveSelected;
- (BOOL)isAddSelected;
- (BOOL)isConfigEnabled;
- (BOOL)isRemoveEnabled;
- (BOOL)isAddEnabled;
- (void)setConfigEnabled:(BOOL)arg1;
- (void)setRemoveEnabled:(BOOL)arg1;
- (void)setAddEnabled:(BOOL)arg1;

@end

@interface AddRemoveBarCell : NSSegmentedCell
{
}

- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface UAPCaptioningPreviewBottomBorderView : NSView
{
    NSGradient *_gradient;
}

@property(retain, nonatomic) NSGradient *gradient; // @synthesize gradient=_gradient;
- (void)drawRect:(struct CGRect)arg1;
- (void)setup;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UAFeatureTableRowView : NSTableRowView
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UAFeatureTableView : NSTableView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface UAPCaptioningViewController : UAPOptionsViewController <NSTabViewDelegate>
{
    UAPCaptioningPreviewView *_previewView;
    NSButton *_preferAccessibilityCaptionsCheckbox;
    NSTextField *_profileNameTextField;
    NSPopUpButton *_textColorPopup;
    NSButton *_textColorOverrideCheckbox;
    NSPopUpButton *_textSizePopup;
    NSButton *_textSizeOverrideCheckbox;
    NSPopUpButton *_textOpacityPopup;
    NSButton *_textOpacityOverrideCheckbox;
    NSPopUpButton *_edgeStylePopup;
    NSButton *_edgeStyleOverrideCheckbox;
    NSPopUpButton *_backgroundColorPopup;
    NSButton *_backgroundColorOverrideCheckbox;
    NSPopUpButton *_backgroundOpacityPopup;
    NSButton *_backgroundOpacityOverrideCheckbox;
    NSPopUpButton *_windowColorPopup;
    NSButton *_windowColorOverrideCheckbox;
    NSPopUpButton *_windowOpacityPopup;
    NSButton *_windowOpacityOverrideCheckbox;
    NSPopUpButton *_defaultFontPopup;
    NSButton *_defaultFontOverrideCheckbox;
    NSPopUpButton *_monospaceSerifFontPopup;
    NSButton *_monospaceSerifFontOverrideCheckbox;
    NSPopUpButton *_proportionalSerifFontPopup;
    NSButton *_proportionalSerifFontOverrideCheckbox;
    NSPopUpButton *_monospaceFontPopup;
    NSButton *_monospaceFontOverrideCheckbox;
    NSPopUpButton *_proportionalFontPopup;
    NSButton *_proportionalFontOverrideCheckbox;
    NSPopUpButton *_casualFontPopup;
    NSButton *_casualFontOverrideCheckbox;
    NSPopUpButton *_cursiveFontPopup;
    NSButton *_cursiveFontOverrideCheckbox;
    NSPopUpButton *_smallCapitalFontPopup;
    NSButton *_smallCapitalFontOverrideCheckbox;
    NSView *_optionsScrollViewContainer;
    AddRemoveBar *_addRemoveSegmentedControl;
    NSTableView *_profileTableView;
    NSWindow *_optionsSheet;
    NSView *_optionsView;
    UAPCaptioningPreviewView *_sheetPreviewView;
    NSScrollView *_optionsScrollView;
    NSMutableArray *_profileIDs;
    NSNumber *_numberOfDefaultProfiles;
    NSString *_activeProfile;
    NSBezierPath *_colorSwatchFillPath;
    NSBezierPath *_colorSwatchBorderPath;
    NSValue *_optionsTabViewInitialFrame;
    NSEvent *_clickEventMonitor;
    struct __CFString *_selctionBeforeEditingProfile;
    struct __CFString *_editingNewProfile;
    NSDictionary *_fontFamilyPSNameToStoragePSName;
    NSDictionary *_storagePSNameToFontFamilyPS;
    BOOL _didAwakeFromNib;
}

- (void)pressSmallCapitalFontOverrideCheckbox:(id)arg1;
- (void)pressCursiveFontOverrideCheckbox:(id)arg1;
- (void)pressCasualFontOverrideCheckbox:(id)arg1;
- (void)pressProportionalFontOverrideCheckbox:(id)arg1;
- (void)pressMonospaceFontOverrideCheckbox:(id)arg1;
- (void)pressProportionalSerifFontOverrideCheckbox:(id)arg1;
- (void)pressMonospaceSerifFontOverrideCheckbox:(id)arg1;
- (void)pressDefaultFontOverrideCheckbox:(id)arg1;
- (void)pressEdgeStyleOverrideCheckbox:(id)arg1;
- (void)pressTextOpacityOverrideCheckbox:(id)arg1;
- (void)pressWindowOpacityOverrideCheckbox:(id)arg1;
- (void)pressWindowColorOverrideCheckbox:(id)arg1;
- (void)pressBackgroundOpacityOverrideCheckbox:(id)arg1;
- (void)pressBackgroundColorOverrideCheckbox:(id)arg1;
- (void)pressTextSizeOverrideCheckbox:(id)arg1;
- (void)pressTextColorOverrideCheckbox:(id)arg1;
- (void)_setFontOverride:(id)arg1 fontStyle:(long long)arg2;
- (void)_setOverride:(id)arg1 setter:(CDUnknownFunctionPointerType)arg2;
- (void)_ensureSingleSelection:(id)arg1;
- (void)pressSmallCapitalFontPopup:(id)arg1;
- (void)pressCursiveFontPopup:(id)arg1;
- (void)pressCasualFontPopup:(id)arg1;
- (void)pressProportionalFontPopup:(id)arg1;
- (void)pressMonospaceFontPopup:(id)arg1;
- (void)pressProportionalSerifFontPopup:(id)arg1;
- (void)pressMonospaceSerifFontPopup:(id)arg1;
- (void)pressDefaultFontPopup:(id)arg1;
- (void)pressEdgeStylePopup:(id)arg1;
- (void)pressTextSizePopup:(id)arg1;
- (void)pressTextOpacityPopup:(id)arg1;
- (void)pressWindowOpacityPopup:(id)arg1;
- (void)pressBackgroundOpacityPopup:(id)arg1;
- (void)pressTextColorPopup:(id)arg1;
- (void)pressWindowColorPopup:(id)arg1;
- (void)pressBackgroundColorPopup:(id)arg1;
- (void)pressPreferAccessibilityCaptions:(id)arg1;
- (void)_storeFontPopupValue:(id)arg1 fontStyle:(long long)arg2;
- (void)_storeOpacityPopupValue:(id)arg1 setter:(CDUnknownFunctionPointerType)arg2;
- (void)_storePercentagePopupValue:(id)arg1 setter:(CDUnknownFunctionPointerType)arg2;
- (void)_storeColorPopupValue:(id)arg1 setter:(CDUnknownFunctionPointerType)arg2;
- (void)_storeColorWellValue:(id)arg1 setter:(CDUnknownFunctionPointerType)arg2;
- (void)_addProfile;
- (void)_setEditingNewProfile:(struct __CFString *)arg1 selectionBeforeEditing:(struct __CFString *)arg2;
- (void)_debugProfileIDs;
- (void)_removeProfile:(id)arg1 preferSelection:(id)arg2;
- (void)pressProfileDeleteButton:(id)arg1;
- (void)pressOptionsCancelButton:(id)arg1;
- (void)_duplicateOrNoNameWarningAlertDidEnd:(id)arg1;
- (void)_warnOfDuplicateNameAssignment:(id)arg1;
- (void)_warnOfNoName;
- (void)pressOptionsOKButton:(id)arg1;
- (void)_addColor:(id)arg1 withNameKey:(id)arg2 ToPopUp:(id)arg3;
- (void)_populateOpacityPopups;
- (id)_opacityPopups;
- (BOOL)_extraFontsEqual;
- (BOOL)_extraFontsCustomized;
- (void)_populateFontPopus;
- (id)_psNameForFontName:(id)arg1;
- (id)_fontPopUps;
- (void)_populateSizePopup;
- (void)_populateColorPopups;
- (id)_allPopUps;
- (void)_loadFontPreferences;
- (void)_loadPreferences;
- (void)_loadOverrides;
- (void)_loadFontOverride:(id)arg1 fontStyle:(long long)arg2;
- (void)_loadOverride:(id)arg1 getter:(CDUnknownFunctionPointerType)arg2;
- (void)_loadFontPopupValue:(id)arg1 fontStyle:(long long)arg2;
- (void)_loadOpacityPopupValue:(id)arg1 getter:(CDUnknownFunctionPointerType)arg2;
- (void)_loadPercentagePopupValue:(id)arg1 getter:(CDUnknownFunctionPointerType)arg2;
- (void)_loadColorPopupValue:(id)arg1 getter:(CDUnknownFunctionPointerType)arg2;
- (void)_loadEdgeStyle;
- (void)_loadColorWellValue:(id)arg1 getter:(CDUnknownFunctionPointerType)arg2;
- (void)_loadActiveProfile;
- (void)_loadPreferAccessibilityCaptionsCheckbox;
- (void)pressAddRemoveBar:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)_updateSelectionBasedUI;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)pressEditProfileButton:(id)arg1;
- (void)_setupActiveProfile;
- (void)_updateProfileIDOrder;
- (void)_generateOrderedProfileIDCache;
- (void)dealloc;
- (void)viewDidAppear;
- (void)awakeFromNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UASwitchActionMaskActionValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface UASwitchActionStringValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface UASwitchTriggerTypeTitleValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface UASwitchTriggerTypeImageValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface UAPAudioViewController : UAPOptionsViewController
{
    NSButton *_flashScreenCheckbox;
    NSButton *_monoAudioCheckbox;
}

- (void)validateControls;
- (void)readPreferences:(id)arg1;
- (void)pressOpenSoundPreferences:(id)arg1;
- (void)pressTestFlashScreen:(id)arg1;
- (void)flashScreenWhenAlertOccurs:(id)arg1;
- (void)playStereoAudioAsMono:(id)arg1;
- (id)init;

@end

@interface UAPDisplayViewController : UAPOptionsViewController
{
    NSButton *_reduceTransparencyCheckbox;
    NSButton *_increaseContrastCheckbox;
    NSButton *_differentiateWithoutColorCheckbox;
    NSButton *_invertColorCheckbox;
    NSButton *_grayscaleCheckbox;
    NSSlider *_enhanceContrastSlider;
    NSSlider *_cursorSizeSlider;
    NSNumber *_oldReduceTransparencyValue;
}

@property(retain, nonatomic) NSNumber *oldReduceTransparencyValue; // @synthesize oldReduceTransparencyValue=_oldReduceTransparencyValue;
- (void)dealloc;
- (void)validateControls;
- (void)readPreferences:(id)arg1;
- (void)pressOpenDisplayPreferences:(id)arg1;
- (void)adjustCursorSize:(id)arg1;
- (void)adjustContrast:(id)arg1;
- (void)grayscale:(id)arg1;
- (void)invertColors:(id)arg1;
- (void)increaseContrast:(id)arg1;
- (void)reduceTransparency:(id)arg1;
- (void)differentiateWithoutColor:(id)arg1;
- (void)_didChangeScreenParameters:(id)arg1;
- (void)_contrastDidChange:(id)arg1;
- (void)loadView;
- (id)init;

@end

@interface UAPKeyboardViewController : UAPOptionsViewController
{
    NSButton *_stickyKeysEnableCheckbox;
    NSButton *_slowKeysEnableCheckbox;
    NSWindow *_stickyKeysOptionsSheet;
    NSWindow *_slowKeysOptionsSheet;
    NSButton *_stickyKeysEnableKeyboardShortcutCheckbox;
    NSButton *_stickyKeysBeepOnModifierCheckbox;
    NSButton *_stickyKeysDisplayOnScreenCheckobx;
    NSPopUpButton *_stickyKeysDisplayLocationPopup;
    NSButton *_slowKeysEnableClickSoundCheckbox;
    NSSlider *_slowKeysAcceptanceDelaySlider;
    long long _cachedStickyKeysEnableKeyboardShortcutCheckboxState;
    long long _cachedStickyKeysBeepOnModifierCheckboxState;
    long long _cachedStickyKeysDisplayOnScreenCheckobxState;
    long long _cachedStickyKeysDisplayLocationPopupSelectedTag;
    long long _cachedSlowKeysEnableClickSoundCheckboxState;
    long long _cachedSlowKeysAcceptanceDelaySliderIntegerValue;
}

- (void)validateControls;
- (void)readPreferences:(id)arg1;
- (void)_readPreferences:(id)arg1 cacheSettings:(BOOL)arg2;
- (void)_readPreferences:(id)arg1;
- (void)dismissSheetDiscardingChanges:(id)arg1;
- (void)dismissSheet:(id)arg1;
- (void)slowKeysChangeAcceptanceDelaySlider:(id)arg1;
- (void)slowKeysEnableClickSounds:(id)arg1;
- (void)stickyKeysDisplayOnScreenCheckobx:(id)arg1;
- (void)stickyKeysSelectDisplayLocation:(id)arg1;
- (void)stickyKeysBeepOnModifier:(id)arg1;
- (void)stickyKeysEnableKeyboardShortcut:(id)arg1;
- (void)pressOpenKeyboardPreferences:(id)arg1;
- (void)pressStickyKeysOptions:(id)arg1;
- (void)pressSlowKeysOptions:(id)arg1;
- (void)enableSlowKeys:(id)arg1;
- (void)enableStickyKeys:(id)arg1;
- (void)loadView;
- (id)view;
- (id)init;

@end

@interface UAPSwitchViewController : UAPOptionsViewController <NSTableViewDataSource, NSTableViewDelegate, NSOpenSavePanelDelegate, UADeviceAssignmentWindowDelegate, NSTextFieldDelegate>
{
    NSTabView *_primaryTabView;
    NSButton *_enableSwitchCheckbox;
    NSButton *_hideAfterDelayCheckbox;
    NSTextField *_hideAfterDelayTextField;
    NSStepper *_hideAfterDelayStepper;
    NSPopUpButton *_navigationFeedbackPopupButton;
    NSPopUpButton *_cursorSizePopupButton;
    NSPopUpButton *_mouseMoveStylePopupButton;
    NSPopUpButton *_resumeAutoScanningAfterSelectPopupButton;
    NSPopUpButton *_mouseCursorActionWhenReachingEdgePopupButton;
    NSWindow *_navigationTimingWindow;
    NSTextField *_sweepingCursorSpeedTextField;
    NSStepper *_sweepingCursorSpeedStepper;
    NSTextField *_autoScanPanelSpeedTextField;
    NSStepper *_autoScanPanelSpeedStepper;
    NSTextField *_autoScanElementSpeedTextField;
    NSStepper *_autoScanElementSpeedStepper;
    NSTextField *_firstItemDelayTextField;
    NSStepper *_firstItemDelayStepper;
    NSButton *_autoScanEnableCheckbox;
    NSTextField *_autoScanEnableInstruction;
    NSPopUpButton *_autoScanCyclePopupButton;
    NSPopUpButton *_autoScanRestartOptionPopupButton;
    NSTableView *_switchSwitchesTableView;
    AddRemoveBar *_addRemoveSwitchBar;
    NSOpenPanel *_openCustomActionFilePanel;
    NSWindow *_switchesSettingsWindow;
    NSTextField *_minimumPressDurationTextField;
    NSStepper *_minimumPressDurationStepper;
    NSTextField *_coalesceIntervalTextField;
    NSStepper *_coalesceIntervalStepper;
    NSTextField *_holdBeforeRepeatDurationTextField;
    NSStepper *_holdBeforeRepeatDurationStepper;
    UADeviceAssignmentWindow *_switchAssignDeviceInputWindow;
    NSStackView *_switchAssignDeviceInputStackView;
    NSView *_pressSwitchInstructionView;
    NSView *_deviceAssignmentConflictView;
    NSView *_deviceAssignmentOptionsView;
    NSView *_deviceAssignmentConfirmationView1;
    NSView *_deviceAssignmentConfirmationView2;
    NSButton *_deviceAssignmentCancelButton;
    NSButton *_deviceAssignmentConflictOKButton;
    NSButton *_deviceAssignmentDoneButton;
    NSTextField *_deviceAssignmentInstructionLabel;
    NSTextField *_deviceAssigmentConflictLabel;
    NSProgressIndicator *_deviceAssigmentBusyIndicator;
    NSTextField *_deviceAssignmentNicknameField;
    NSPopUpButton *_deviceActionPopupButton;
    NSPopUpButton *_devicePressHoldOptionPopupButton;
    NSButton *_deviceAssignmentReassignButton;
    NSTextField *_deviceInputWarningLabel;
    NSMutableArray *_switchInputEntities;
    UASwitchInputEntity *_editingSwitchInputEntity;
    NSMutableArray *_defaultSwitchNames;
    NSNumberFormatter *_secondsFormatter;
    NSNumberFormatter *_floatFormatter;
    NSNumberFormatter *_intFormatter;
    NSMutableDictionary *_switchInputs;
    double _sheetHeight;
    BOOL _isAuthorizing;
}

@property(readonly, retain, nonatomic) NSMutableDictionary *switchInputs; // @synthesize switchInputs=_switchInputs;
@property(retain, nonatomic) NSNumberFormatter *intFormatter; // @synthesize intFormatter=_intFormatter;
@property(retain, nonatomic) NSNumberFormatter *floatFormatter; // @synthesize floatFormatter=_floatFormatter;
@property(retain, nonatomic) NSNumberFormatter *secondsFormatter; // @synthesize secondsFormatter=_secondsFormatter;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (BOOL)isSecureTapEnabled;
- (void)enableSecureTapAndAssistiveControl;
- (void)_setSecureTapIsAllowed:(BOOL)arg1;
- (void)_openCustomActionFilePanelDidClose:(long long)arg1;
- (void)_hideOpenCustomActionFilePanel;
- (void)_addCustomAction;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)_updateUIForSelection;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_selectAction;
- (void)updateDeviceAssignment:(id)arg1 forWindow:(id)arg2;
- (void)_updateDeviceInputWarningLabel;
- (void)controlTextDidBeginEditing:(id)arg1;
- (BOOL)_verifyDeviceAssignment:(id)arg1;
- (void)_setEditableScanMode:(BOOL)arg1;
- (void)_displaySwitchEditView;
- (void)_removeSwitchEntity:(id)arg1;
- (void)_addNewSwitch;
- (id)_switchActionsForActionKey:(id)arg1;
- (void)_showWarning;
- (void)_resetInputAssignment;
- (void)_configureDeviceInputsForActionEntity:(id)arg1;
- (void)_configureSelectedSwitch;
- (void)_saveChangesForEntity:(id)arg1;
- (void)_genericSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_switchAssignmentSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_showAssignmentSheet;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)setMinimumPressBeforeRepeatDuration:(double)arg1;
- (void)setAutoScanPanelStepInterval:(double)arg1;
- (void)setSweepingCursorSpeed:(double)arg1;
- (void)setAutoScanElementStepInterval:(double)arg1;
- (void)setFirstItemDelay:(double)arg1;
- (void)setMinimumPressDuration:(double)arg1;
- (void)setCoalesceInterval:(double)arg1;
- (void)setHideAfterDelay:(double)arg1;
- (void)reassignSwitch:(id)arg1;
- (void)editHoldBeforeRepeatDuration:(id)arg1;
- (void)editSweepingCursorSpeed:(id)arg1;
- (void)editAutoScanElementStepInterval:(id)arg1;
- (void)editAutoScanPanelStepInterval:(id)arg1;
- (void)editHideAfterDelay:(id)arg1;
- (void)editFirstItemDelay:(id)arg1;
- (void)editMinimumPressDuration:(id)arg1;
- (void)editCoalesceInterval:(id)arg1;
- (void)switchesGeneralSettingsWindowDismissed:(id)arg1;
- (void)displaySwitchesGeneralSettings:(id)arg1;
- (void)switchNameChanged:(id)arg1;
- (void)switchAssignmentConflictWarningDismissed:(id)arg1;
- (void)switchAssignDeviceInputWindowCancelled:(id)arg1;
- (void)switchAssignDeviceInputWindowDone:(id)arg1;
- (void)pressSwitchesAddRemoveConfigureSegmentedControl:(id)arg1;
- (void)selectActionWhenMouseCursorReachesScreenEdge:(id)arg1;
- (void)navigationTimingSettingsWindowDismissed:(id)arg1;
- (void)displayNavigationTimingSettings:(id)arg1;
- (void)selectActionAfterSelectInAutoScanning:(id)arg1;
- (void)selectMouseMoveStyle:(id)arg1;
- (void)selectCursorSize:(id)arg1;
- (void)selectNavigationFeedback:(id)arg1;
- (void)pressOpenPanelEditor:(id)arg1;
- (void)toggleHideAfterDelayEnabled:(id)arg1;
- (void)selectElementRestartOption:(id)arg1;
- (void)selectAutoScanCycle:(id)arg1;
- (void)toggleEnableAutoScan:(id)arg1;
- (void)toggleEnableSwitch:(id)arg1;
- (void)_confirmTurningOffSwitchControl;
- (void)confirmAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_enableAssistiveControl:(BOOL)arg1;
- (void)_waitForSecureTapFileToEnable;
- (void)_enableIfSecureTapFileExists;
- (BOOL)_updateSwitchesTableModel;
- (void)_initializeElementRestartOptionMenu;
- (void)_initializeActionsMenu;
- (void)_initializeRepeatCycleMenu;
- (void)_initializeDefaultSwitchNames;
- (void)readPreferences:(id)arg1;
- (id)helpAnchorForCurrentState;
- (void)loadView;
- (void)_initializeStackView;
- (void)_switchSettingsDidChange:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UAPMouseAndTrackpadViewController : UAPOptionsViewController
{
    NSButton *_enableMouseScrollCheckbox;
    NSPopUpButton *_mouseScrollBehaviorPopup;
    NSButton *_ignoreTrackpadWhenExternalMouseCheckbox;
    NSTextField *_ignoreTrackpadWhenExternalMouseText;
    NSSlider *_mouseScrollSpeedSlider;
    NSSlider *_doubleClickSpeedSlider;
    NSTextField *_doubleClickSpeedLabel;
    NSStackView *_primaryStackView;
    NSView *_doubleClickSpeedView;
    NSView *_springLoadingDelayView;
    NSView *_ignoreTrackpadWhenExternalMouseView;
    NSButton *_enableSpringLoadingCheckbox;
    NSSlider *_springLoadingDelaySlider;
    NSButton *_mouseKeysEnableCheckbox;
    NSButton *_mouseKeysEnableKeyboardShortcutCheckbox;
    NSButton *_mouseKeysIgnoreTrackpadCheckbox;
    NSSlider *_mouseKeysInitialDelay;
    NSSlider *_mouseKeysMaxSpeed;
    NSWindow *_trackpadOptionsSheet;
    NSStackView *_trackpadOptionsStackView;
    NSView *_trackpadOptionsPrimaryView;
    NSSlider *_trackpadScrollSpeedSlider;
    NSButton *_enableTrackpadDraggingCheckbox;
    NSPopUpButton *_trackpadDraggingBehaviorPopup;
    NSButton *_enableTrackpadScrollCheckbox;
    NSPopUpButton *_trackpadScrollBehaviorPopup;
    NSButton *_enableTrackpadTapToClickCheckbox;
    NSView *_enableTrackpadTapToClickView;
    NSWindow *_mouseOptionsSheet;
    NSWindow *_mouseKeysOptionsSheet;
    NSButton *_trackpadOptionsButton;
    NSButton *_mouseOptionsButton;
    long long _cachedMouseScrollSpeedSliderIntegerValue;
    long long _cachedEnableMouseScrollCheckboxState;
    long long _cachedMouseScrollBehaviorPopupIndexOfSelectedItem;
    long long _cachedTrackpadTapBehavior;
    long long _cachedTrackpadScrollSpeedSliderIntegerValue;
    long long _cachedEnableTrackpadScrollCheckboxState;
    long long _cachedTrackpadScrollBehaviorPopupIndexOfSelectedItem;
    long long _cachedEnableTrackpadDraggingCheckboxState;
    long long _cachedTrackpadDraggingBehaviorPopupSelectedTag;
    long long _cachedEnableTrackpadTapToClickCheckboxState;
    long long _cachedMouseKeysEnableKeyboardShortcutCheckboxState;
    long long _cachedMouseKeysIgnoreTrackpadCheckboxState;
    double _cachedMouseKeysInitialDelaySliderDoubleValue;
    double _cachedMouseKeysMaxSpeedSliderDoubleValue;
}

- (BOOL)_systemSpringingEnabled;
- (void)_setSystemSpringingEnabled:(BOOL)arg1;
- (float)_systemSpringingDelay;
- (void)_setSystemSpringingDelay:(float)arg1;
- (void)validateControls;
- (void)_readPreferences:(id)arg1 cacheSettings:(BOOL)arg2;
- (void)readPreferences:(id)arg1;
- (void)dismissSheetDiscardingChanges:(id)arg1;
- (void)dismissSheet:(id)arg1;
- (double)_mouseKeysClosestSpeedTickMarkValueToValue:(float)arg1;
- (double)_mouseKeysClosestInitialDelayTickMarkValueToValue:(float)arg1;
- (int)_mouseKeysClosestValueFromArray:(float *)arg1 numberOfEntries:(int)arg2 toValue:(float)arg3;
- (void)mouseKeysChangeMaxSpeed:(id)arg1;
- (void)mouseKeysChangeInitialDelay:(id)arg1;
- (void)mouseKeysIgnoreTrackpad:(id)arg1;
- (void)mouseKeysEnableKeyboardShortcut:(id)arg1;
- (void)mouseKeysEnable:(id)arg1;
- (void)adjustMouseScrollSpeed:(id)arg1;
- (void)enableMouseScroll:(id)arg1;
- (void)mouseScrollUsingInertia:(id)arg1;
- (void)openMouseKeysOptions:(id)arg1;
- (void)openMouseOptions:(id)arg1;
- (void)openTrackpadOptions:(id)arg1;
- (void)enableTrackpadTapToClick:(id)arg1;
- (void)adjustTrackpadScrollSpeed:(id)arg1;
- (void)trackpadDraggingStyle:(id)arg1;
- (void)_updateTrackpadDraggingPrefsFromUI;
- (void)enableTrackpadDragging:(id)arg1;
- (void)_updateTrackpadDraggingUI;
- (void)enableTrackpadScroll:(id)arg1;
- (void)trackpadScrollUsingInertia:(id)arg1;
- (void)adjustDoubleClickSpeed:(id)arg1;
- (void)ignoreTrackpadWhenExternalMouse:(id)arg1;
- (void)enableSpringLoading:(id)arg1;
- (void)adjustSpringLoadingDelay:(id)arg1;
- (void)loadView;
- (void)_setupPrimaryStackView;
- (void)_ioSetBoolProperty:(BOOL)arg1 forKey:(struct __CFString *)arg2;
- (id)init;

@end

@interface UAPOptionsViewController : NSViewController
{
    NSString *_notificationOfInterest;
    UniversalAccessPref *_universalAccessPref;
}

@property(nonatomic) __weak UniversalAccessPref *universalAccessPref; // @synthesize universalAccessPref=_universalAccessPref;
- (void)launchBinaryWithIdentifier:(struct __CFString *)arg1;
- (void)launchBinaryWithURL:(struct __CFURL *)arg1;
- (id)fieldEditorForObject:(id)arg1;
- (id)view;
- (void)loadView;
- (void)switchToPanel:(id)arg1;
- (id)preferenceManager;
- (void)stopListeningForChanges;
- (void)startListeningForChanges;
- (void)readPreferences:(id)arg1;
- (void)finalize;
- (id)helpAnchorForCurrentState;
- (void)updateLockedUI;
- (void)validateControls;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithUAPref:(id)arg1;

@end

@interface UAPVoiceOverViewController : UAPOptionsViewController
{
    NSButton *_voiceOverButton;
    NSTextField *_voiceOverToggleKeyText;
    NSTextField *_voiceOverToggleKeyDescriptionText;
}

- (void)validateControls;
- (void)readPreferences:(id)arg1;
- (void)enableVoiceOver:(id)arg1;
- (void)pressOpenVoiceOverTraining:(id)arg1;
- (void)pressOpenVoiceOverUtility:(id)arg1;
- (void)_voiceOverSettingsDidChange:(id)arg1;
- (id)init;

@end

@interface UAPZoomViewController : UAPOptionsViewController
{
    NSButton *_useKeyboardZoomCheckbox;
    NSButton *_useScrollZoomCheckbox;
    NSComboBox *_scrollWheelModifierCombo;
    NSButton *_smoothImagesCheckbox;
    NSButton *_showPreviewRectangleCheckbox;
    NSButton *_followsKeyboardFocus;
    NSPopUpButton *_zoomStyle;
    NSView *_scrollWheelOptionsView;
    NSView *_normalOptionsView;
    NSTextField *_zoomToggleKeyText;
    NSTextField *_zoomInKeyText;
    NSTextField *_zoomOutKeyText;
    NSTextField *_smoothKeyText;
    NSTextField *_followFocusKeyText;
    NSView *_zoomKeyShortcutsView;
    NSWindow *_zoomOptionsWindow;
    NSView *_fullscreenOptionsSheet;
    UAPZoomSlider *_maxZoomLevelSlider;
    UAPZoomSlider *_minZoomLevelSlider;
    NSMatrix *_fullscreenPanningModeMatrix;
    long long _scrollWheelModifiers;
    UAModifiersController *_scrollWheelModifierController;
    UAScrollZoomSheetController *_scrollZoomSheetController;
    float _cachedMaxZoomLevelSliderValue;
    float _cachedMinZoomLevelSliderValue;
    long long _cachedShowPreviewRectangleCheckboxState;
    long long _cachedFullscreenPanningModeMatrixSelectedTag;
}

- (void)validateControls;
- (void)loadView;
- (id)fieldEditorForObject:(id)arg1;
- (void)_readPreferences:(id)arg1 cacheSettings:(BOOL)arg2;
- (void)_setHotkeyText:(id)arg1 symbolicKey:(unsigned long long)arg2;
- (void)readPreferences:(id)arg1;
- (void)smoothImages:(id)arg1;
- (void)fullscreenPanningMode:(id)arg1;
- (void)showPreviewRectangle:(id)arg1;
- (void)adjustMinZoomLevel:(id)arg1;
- (void)adjustMaxZoomLevel:(id)arg1;
- (void)pressMoreOptions:(id)arg1;
- (void)followsKeyboardFocus:(id)arg1;
- (void)zoomStyle:(id)arg1;
- (void)useScrollZoom:(id)arg1;
- (void)useKeyboardZoom:(id)arg1;
- (void)dismissSheetDiscardingChanges:(id)arg1;
- (void)dismissSheet:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (void)_cleanupBeforeDeallocUAPZoomViewController;
- (void)_updateShortcutsEnabled;
- (id)init;

@end

@interface UAPIntrinsicContentSizeTextFieldView : NSTextField
{
}

- (struct CGSize)intrinsicContentSize;

@end

@interface UAPZoomSlider : ValidSubrangeSlider
{
}

+ (void)initialize;

@end

@interface UAPCaptioningPreviewCloudView : NSView
{
    NSArray *_cloudImages;
    unsigned long long _cloudImageIndex;
    CALayer *_rootLayer;
    CALayer *_cloudLayer;
    CALayer *_nextCloudLayer;
    CALayer *_maskLayer;
    NSTimer *_animationTimer;
}

- (void)swapCloudLayerWithNextCloudLayer;
- (void)cleanupCurrentLayer:(id)arg1 nextLayer:(id)arg2 afterFadeAnimation:(id)arg3;
- (void)setupCurrentLayer:(id)arg1 nextLayer:(id)arg2 forFadeAnimation:(id)arg3;
- (void)cleanupLayer:(id)arg1 afterSlideAnimation:(id)arg2;
- (void)setupLayer:(id)arg1 forSlideAnimation:(id)arg2;
- (void)cleanupAfterSlideAnimation:(id)arg1 fadeAnimation:(id)arg2;
- (void)runSlideAnimation:(id)arg1 fadeAnimation:(id)arg2;
- (void)setupForSlideAnimation:(id)arg1 fadeAnimation:(id)arg2;
- (void)animateWithSlideAnimation:(id)arg1 fadeAnimation:(id)arg2;
- (void)animate;
- (void)startAnimation;
- (id)fadeAnimation;
- (id)slideAnimation;
- (void)setImage:(id)arg1 forLayer:(id)arg2;
- (id)nextCloudImage;
- (id)cloudImages;
- (void)setup;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UAPDescriptionsViewController : UAPOptionsViewController
{
    NSButton *_preferVideoDescriptionsCheckbox;
}

- (void)readPreferences:(id)arg1;
- (void)pressPreferVideoDescriptions:(id)arg1;
- (id)init;

@end

@interface UASwitchUtilities : NSObject
{
}

+ (id)nameForKeyCombo:(unsigned short)arg1 modifiers:(unsigned long long)arg2;
+ (id)nameForMouseButton:(long long)arg1;
+ (id)nameForGenericButton:(long long)arg1;

@end

@interface UAPZoomSliderCell : ValidSubrangeSliderCell
{
}

- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;

@end

@interface UniversalAccessPref : NSPreference <NSTabViewDelegate, NSTableViewDataSource>
{
    NSTableView *_featureTable;
    NSView *_optionsViewHolder;
    NSView *_boxView;
    NSButton *_showUAMenuExtraCheckbox;
    NSLayoutConstraint *_sidebarLeading;
    NSLayoutConstraint *_sidebarWidth;
    NSLayoutConstraint *_sidebarOptionsViewHolderSpacing;
    NSLayoutConstraint *_optionsViewHolderWidth;
    NSLayoutConstraint *_optionsViewHolderTrailing;
    NSMutableArray *_featureTableContents;
    NSMutableDictionary *_paneControllers;
    UAPOptionsViewController *_currentController;
    NSDictionary *_searchTermToFeature;
    NSDictionary *_featureToHelpAnchor;
    NSPrefPanesCenter *_prefPanesCenter;
    BOOL _didAwakeFromNib;
}

- (void)dealloc;
- (void)finalize;
- (void)showUAMenuExtra:(id)arg1;
- (id)_menuExtraBundle;
- (BOOL)_menuExtraActive;
- (void)_menuExtraUpdateStatus;
- (void)_cleanupBeforeDeallocUniversalAccessPref;
- (void)showHelp:(id)arg1;
- (void)revealElementForKey:(id)arg1;
- (void)handleOpenParameter:(const struct AEDesc *)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (id)preferenceManager;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)_viewControllerForEntity:(id)arg1;
- (void)applyMacManagerSettings;
- (void)_applyMCXSettings:(id)arg1;
- (void)mainViewDidLoad;
- (void)willUnselect;
- (void)willSelect;
- (void)_sortViews;
- (void)_updateTree;
- (void)awakeFromNib;
- (long long)_columnWidth;
- (void)_initializeLookupTables;
- (void)_selectRowForFeatureID:(int)arg1;
- (void)_createTableModel;
- (id)_iconForPrefPaneBundleID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UAPSpeakableItemsViewController : UAPOptionsViewController
{
}

- (void)_close;
- (void)_show;
- (void)_finalizeRecognizerPlugInViewSetUp;
- (void)loadView;
- (void)dealloc;
- (id)init;

@end

@interface UASwitchTableCellView : NSTableCellView
{
    NSTextField *_actionTitle;
    NSTextField *_switchTitle;
}

@property NSTextField *switchTitle; // @synthesize switchTitle=_switchTitle;
@property NSTextField *actionTitle; // @synthesize actionTitle=_actionTitle;

@end

@interface UASwitchInputEntity : NSObject
{
    long long _index;
    BOOL _isHeader;
    BOOL _isRequired;
    NSString *_actionKey;
    NSMutableDictionary *_deviceSettings;
}

@property(retain, nonatomic) NSMutableDictionary *deviceSettings; // @synthesize deviceSettings=_deviceSettings;
@property(retain, nonatomic) NSString *actionKey; // @synthesize actionKey=_actionKey;
@property BOOL isRequired; // @synthesize isRequired=_isRequired;
@property BOOL isHeader; // @synthesize isHeader=_isHeader;
@property long long index; // @synthesize index=_index;
- (id)description;
- (void)clear;
- (void)setWithEntity:(id)arg1;
- (id)switchName;
- (id)title;
- (BOOL)hasSystemDefinedAction;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithIndex:(long long)arg1 actionKey:(id)arg2;

@end

@interface UADeviceAssignmentWindow : NSWindow <ACSHHIDDeviceManagerDelegate, ACSHEventTapEventHandler>
{
    BOOL _isCaptureEnabled;
    BOOL _isCapturingEvents;
}

@property BOOL isCapturingEvents; // @synthesize isCapturingEvents=_isCapturingEvents;
- (void)device:(id)arg1 didPostEvent:(id)arg2;
- (BOOL)shouldSeizeMonitoredDevice:(id)arg1;
- (BOOL)shouldMonitorDevice:(id)arg1;
- (BOOL)_hitButton:(struct __CGEvent *)arg1;
- (id)_uiViewsForView:(id)arg1;
- (BOOL)_handleMouseEvent:(struct __CGEvent *)arg1;
- (BOOL)_handleKeyEvent:(struct __CGEvent *)arg1;
- (struct __CGEvent *)handleEvent:(struct __CGEvent *)arg1;
- (void)enableCapture:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UAPCaptioningPreviewBackgroundView : NSView
{
    UAPCaptioningPreviewCloudView *_cloudView;
}

- (void)startAnimation;
- (void)centerView:(id)arg1;
- (void)setup;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UAPWindowBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;

@end

@interface UAPCaptioningPreviewTextView : NSView
{
    struct OpaqueFigSubtitleRenderer *_subtitleRenderer;
    CALayer *_imageLayer;
}

- (id)_subtitleImage;
- (void)updateImageLayer;
- (void)_previewNeedsUpdateOnMainThread;
- (void)_previewNeedsUpdate;
- (void)_mediaAccessibilityDidChange:(id)arg1;
- (void)_figSubtitleRendererNeedsLayout:(id)arg1;
- (void)setup;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UAPCaptioningPreviewView : NSView
{
    UAPCaptioningPreviewBackgroundView *_background;
    UAPCaptioningPreviewTextView *_text;
}

- (void)didAppear;
- (void)centerView:(id)arg1;
- (void)setup;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UAPBoxBackgroundView : NSView
{
    CALayer *_maskLayer;
    CALayer *_imageLayer;
}

- (void)dealloc;
- (BOOL)isOpaque;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_setup;
- (void)updateLayer;

@end

@interface UAPCaptioningProfileTableView : NSTableCellView
{
    NSButton *_editButton;
    BOOL _didAwakeFromNib;
}

@property(readonly, nonatomic) NSButton *editButton; // @synthesize editButton=_editButton;
- (void)awakeFromNib;

@end

@interface UAPBoxMask : NSView
{
    CALayer *_imageLayer;
    CALayer *_maskLayer;
}

- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)_handleHighContrastChangedNotification:(id)arg1;
- (void)_setup;
- (BOOL)wantsUpdateLayer;
- (void)updateLayer;

@end

@interface NSDictionary (SwitchInput)
- (id)pressHoldOption;
- (id)inputName;
- (id)deviceDisplayName;
- (unsigned long long)modifiers;
- (unsigned short)keyCode;
- (id)switchValue;
- (id)triggerType;
- (id)nickname;
- (BOOL)isEqual:(id)arg1;
@end

@interface NSMutableDictionary (switchInput)
- (void)setPressHoldOption:(id)arg1;
- (void)setNickname:(id)arg1;
- (void)setSwitchValue:(id)arg1;
- (void)setTriggerType:(id)arg1;
- (void)setPrimaryUsagePage:(id)arg1;
- (void)setPrimaryUsage:(id)arg1;
- (void)setServiceID:(id)arg1;
- (void)setSubInterfaceID:(id)arg1;
- (void)setInterfaceID:(id)arg1;
- (void)setHidKind:(id)arg1;
- (void)setBuiltIn:(id)arg1;
- (void)setTransport:(id)arg1;
- (void)setProductName:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setManufacturer:(id)arg1;
- (void)setProductID:(id)arg1;
- (void)setVendorIDSource:(id)arg1;
- (void)setVendorID:(id)arg1;
- (void)setLocationID:(id)arg1;
@end

@interface NSPrefPaneUtils (UAPNSPrefPaneUtils)
+ (BOOL)_UAPneedFN;
@end

